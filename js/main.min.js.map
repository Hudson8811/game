{"version":3,"sources":["main.js"],"names":["document","addEventListener","header","querySelector","main","setMainPadding","resizeObserver","ResizeObserver","mutationObserver","observe","MutationObserver","headerHeight","offsetHeight","style","paddingTop","childList","subtree","attributes","characterData","window","disconnect","handleScroll","scrollY","classList","add","remove","toggleButton","getElementById","expandedMenu","fixedMenu","e","stopPropagation","toggle","this","target","tagName","mainRestrictions","updateMainRestrictionsPosition","top","handleScreenResize","matchMedia","matches","removeEventListener","initFormSelects","querySelectorAll","forEach","formSelect","dataset","init","handleFormSelect","btn","btnHeight","list","event","openFormSelect","item","closest","selectedText","textContent","contains","body","transferFormValueInput","let","value","cursorPosition","selectionStart","pureValue","replace","newCursorPosition","Math","min","length","setSelectionRange"],"mappings":"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","file":"main.min.js","sourcesContent":["// padding-top для main\ndocument.addEventListener('DOMContentLoaded', function() {\n  const header = document.querySelector('header');\n  const main = document.querySelector('main');\n\n  if (!header || !main) {\n    return;\n  }\n\n  function setMainPadding() {\n    const headerHeight = header.offsetHeight;\n    main.style.paddingTop = `${headerHeight}px`;\n  }\n\n  // Инициализация\n  setMainPadding();\n\n  // Отслеживание изменений размеров через ResizeObserver\n  const resizeObserver = new ResizeObserver(setMainPadding);\n  resizeObserver.observe(header);\n\n  // Отслеживание изменений в DOM (если header динамически меняется)\n  const mutationObserver = new MutationObserver(setMainPadding);\n  mutationObserver.observe(header, {\n    childList: true,       // отслеживание добавления/удаления дочерних элементов\n    subtree: true,         // отслеживание изменений во всём поддереве\n    attributes: true,      // отслеживание изменений атрибутов\n    characterData: true    // отслеживание текстовых изменений\n  });\n\n  // Очистка при размонтировании\n  window.addEventListener('unload', () => {\n    resizeObserver.disconnect();\n    mutationObserver.disconnect();\n  });\n});\n// header - задаётся класс fixed при скролее\ndocument.addEventListener('DOMContentLoaded', function() {\n  const header = document.querySelector('header');\n\n  if (!header) {\n    return;\n  }\n\n  function handleScroll() {\n    if (window.scrollY > 0) {\n        header.classList.add('fixed');\n    } else {\n        header.classList.remove('fixed');\n    }\n  }\n\n  window.addEventListener('scroll', handleScroll);\n\n  handleScroll();\n});\n\n// Открытие меню на странице пользователя\ndocument.addEventListener('DOMContentLoaded', function() {\n  const toggleButton = document.getElementById('mobileMenuOpen');\n  const expandedMenu = document.getElementById('expandedMenu');\n  const fixedMenu = document.getElementById('mobileMenu');\n\n  if (toggleButton && expandedMenu && fixedMenu) {\n    toggleButton.addEventListener('click', function(e) {\n        e.stopPropagation();\n        fixedMenu.classList.toggle('active');\n        this.classList.toggle('active');\n    });\n\n    expandedMenu.addEventListener('click', function(e) {\n        if (e.target.tagName === 'A') {\n            fixedMenu.classList.remove('active');\n            toggleButton.classList.remove('active');\n        }\n    });\n\n    document.addEventListener('click', function() {\n        fixedMenu.classList.remove('active');\n        toggleButton.classList.remove('active');\n    });\n\n    fixedMenu.addEventListener('click', function(e) {\n        e.stopPropagation();\n    });\n  }\n});\n\n// Задаётся pading-top для информационного окна на основе высоты header\ndocument.addEventListener('DOMContentLoaded', function() {\n  const header = document.querySelector('header');\n  const mainRestrictions = document.querySelector('.main-restrictions');\n\n  if (!header || !mainRestrictions) return;\n\n  // Функция для обновления позиции\n  function updateMainRestrictionsPosition() {\n    const headerHeight = header.offsetHeight;\n    mainRestrictions.style.top = `${headerHeight}px`;\n  }\n\n  // Проверяем ширину экрана\n  function handleScreenResize() {\n    const mediaQuery = window.matchMedia('(min-width: 768px)');\n\n    if (mediaQuery.matches) {\n        // Если экран >= 768px — включаем\n        updateMainRestrictionsPosition();\n        const resizeObserver = new ResizeObserver(updateMainRestrictionsPosition);\n        resizeObserver.observe(header);\n\n        // Очищаем старый обработчик\n        window.removeEventListener('resize', updateMainRestrictionsPosition);\n    } else {\n        // Если экран < 768px\n        mainRestrictions.style.top = '0';\n    }\n  }\n\n  handleScreenResize();\n\n  window.addEventListener('resize', handleScreenResize);\n});\n\n// Открытие списка\ndocument.addEventListener('DOMContentLoaded', function() {\n  function handleFormSelect(formSelect) {\n    const btn = formSelect.querySelector('.formSelect-btn');\n    const list = formSelect.querySelector('.formSelect-list');\n\n    if (!btn || !list) return;\n\n    // Устанавливаем padding-top для списка на основе высоты кнопки\n    const btnHeight = btn.offsetHeight;\n    list.style.paddingTop = `${btnHeight}px`;\n\n    btn.addEventListener('click', function(event) {\n      event.stopPropagation();\n      // Закрываем все другие открытые меню перед открытием текущего\n      document.querySelectorAll('.formSelect.active').forEach(openFormSelect => {\n        if (openFormSelect !== formSelect) {\n          openFormSelect.classList.remove('active');\n        }\n      });\n      formSelect.classList.toggle('active');\n    });\n\n    formSelect.addEventListener('click', function(event) {\n      const item = event.target.closest('.formSelect-list__item');\n      if (item) {\n        const selectedText = item.querySelector('p').textContent;\n        btn.querySelector('p').textContent = selectedText;\n        formSelect.classList.remove('active');\n      }\n    });\n  }\n\n  function initFormSelects() {\n    document.querySelectorAll('.formSelect').forEach(formSelect => {\n      if (!formSelect.dataset.init) {\n        formSelect.dataset.init = 'true';\n        handleFormSelect(formSelect);\n      }\n    });\n  }\n\n  document.addEventListener('click', function(event) {\n    document.querySelectorAll('.formSelect.active').forEach(formSelect => {\n      if (!formSelect.contains(event.target)) {\n        formSelect.classList.remove('active');\n      }\n    });\n  });\n\n  const observer = new MutationObserver(initFormSelects);\n  observer.observe(document.body, { childList: true, subtree: true });\n\n  initFormSelects();\n});\n\n// Задаётся буква \"Р\" в конец числа у поля\ndocument.addEventListener('DOMContentLoaded', function() {\n  const transferFormValueInput = document.getElementById('transferFormValue');\n\n  if (transferFormValueInput) {\n    transferFormValueInput.addEventListener('input', function(e) {\n      let value = e.target.value;\n      const cursorPosition = e.target.selectionStart;\n\n      const pureValue = value.replace(/[^0-9]/g, '');\n\n      if (pureValue) {\n        const formattedValue = pureValue + ' ₽';\n        e.target.value = formattedValue;\n\n        const newCursorPosition = Math.min(cursorPosition, pureValue.length);\n        e.target.setSelectionRange(newCursorPosition, newCursorPosition);\n      } else {\n        e.target.value = '';\n      }\n    });\n  }\n});\n// Задаётся буква \"Р\" в конец числа у поля\ndocument.addEventListener('DOMContentLoaded', function() {\n  const transferFormValueInput = document.getElementById('adminBalanceValue');\n\n  if (transferFormValueInput) {\n    transferFormValueInput.addEventListener('input', function(e) {\n      let value = e.target.value;\n      const cursorPosition = e.target.selectionStart;\n\n      const pureValue = value.replace(/[^0-9]/g, '');\n\n      if (pureValue) {\n        const formattedValue = pureValue + ' ₽';\n        e.target.value = formattedValue;\n\n        const newCursorPosition = Math.min(cursorPosition, pureValue.length);\n        e.target.setSelectionRange(newCursorPosition, newCursorPosition);\n      } else {\n        e.target.value = '';\n      }\n    });\n  }\n});\n"]}